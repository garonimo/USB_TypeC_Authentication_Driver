/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* src = "get_digests.v:13" *)
module get_digests_answer(clk, Ack_in, header, Ack_out, payload);
  (* src = "get_digests.v:16" *)
  input Ack_in;
  (* src = "get_digests.v:18" *)
  output Ack_out;
  (* src = "get_digests.v:24" *)
  wire Ack_out_temp;
  (* src = "get_digests.v:15" *)
  input clk;
  (* src = "get_digests.v:17" *)
  output [31:0] header;
  (* src = "get_digests.v:22" *)
  wire [31:0] header_temp;
  (* src = "get_digests.v:19" *)
  output [2047:0] payload;
  (* src = "get_digests.v:23" *)
  wire [2047:0] payload_temp;
  reg \header_temp_reg[1] ;
  (* src = "get_digests.v:27" *)
  always @(posedge clk)
      \header_temp_reg[1]  <= Ack_in;
  assign header_temp[1] = \header_temp_reg[1] ;
  assign Ack_out = header_temp[1];
  assign Ack_out_temp = header_temp[1];
  assign header = { 14'b00000000000000, header_temp[1], 7'b0000000, header_temp[1], header_temp[1], 5'b00000, header_temp[1], header_temp[1], header_temp[1] };
  assign { header_temp[31:2], header_temp[0] } = { 14'b00000000000000, header_temp[1], 7'b0000000, header_temp[1], header_temp[1], 5'b00000, header_temp[1], header_temp[1] };
  assign payload = { 1957'bheader_temp[1], 3'b000, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], header_temp[1], 1'b0, header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], header_temp[1], 3'b000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], 2'b00, header_temp[1], 4'b0000, header_temp[1], 2'b00, header_temp[1], 1'b0, header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], header_temp[1], 2'b00, header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], 2'b00, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], 4'b0000 };
  assign payload_temp = { 1957'bheader_temp[1], 3'b000, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], header_temp[1], 1'b0, header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], header_temp[1], 3'b000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], 2'b00, header_temp[1], 4'b0000, header_temp[1], 2'b00, header_temp[1], 1'b0, header_temp[1], 4'b0000, header_temp[1], header_temp[1], header_temp[1], header_temp[1], header_temp[1], 2'b00, header_temp[1], header_temp[1], 4'b0000, header_temp[1], header_temp[1], 2'b00, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], 1'b0, header_temp[1], 4'b0000 };
endmodule
