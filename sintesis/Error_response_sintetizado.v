/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* src = "Error_response.v:12" *)
module error_response(clk, Enable, Error_Invalid_Request, Error_Invalid_Request_challenge, Error_Invalid_Request_GetCertificate, Error_Busy, Error_Unsupported_Protocol, Error_Unspecified, header, payload, MSG_ready);
  (* src = "Error_response.v:33" *)
  wire [31:0] _00_;
  (* src = "Error_response.v:33" *)
  wire [7:0] _01_;
  (* src = "Error_response.v:33" *)
  wire [7:0] _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire [1:0] _33_;
  wire _34_;
  wire [1:0] _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire [1:0] _39_;
  wire [4:0] _40_;
  wire [4:0] _41_;
  wire [4:0] _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  (* src = "Error_response.v:36|<techmap.v>:432" *)
  wire [23:0] _46_;
  (* src = "Error_response.v:36|<techmap.v>:428" *)
  wire [7:0] _47_;
  (* src = "Error_response.v:36|<techmap.v>:445" *)
  wire _48_;
  (* src = "Error_response.v:15" *)
  input Enable;
  (* src = "Error_response.v:19" *)
  input Error_Busy;
  (* src = "Error_response.v:16" *)
  input Error_Invalid_Request;
  (* src = "Error_response.v:18" *)
  input Error_Invalid_Request_GetCertificate;
  (* src = "Error_response.v:17" *)
  input Error_Invalid_Request_challenge;
  (* src = "Error_response.v:21" *)
  input Error_Unspecified;
  (* src = "Error_response.v:20" *)
  input Error_Unsupported_Protocol;
  (* src = "Error_response.v:24" *)
  output MSG_ready;
  (* src = "Error_response.v:29" *)
  wire MSG_ready_temp;
  (* src = "Error_response.v:14" *)
  input clk;
  (* src = "Error_response.v:22" *)
  output [31:0] header;
  (* src = "Error_response.v:27" *)
  wire [31:0] header_temp;
  (* src = "Error_response.v:23" *)
  output payload;
  NOT _49_ (
    .A(_31_),
    .Y(_06_)
  );
  NAND _50_ (
    .A(_06_),
    .B(_03_),
    .Y(_07_)
  );
  NOT _51_ (
    .A(_30_),
    .Y(_08_)
  );
  NOR _52_ (
    .A(_05_),
    .B(_04_),
    .Y(_09_)
  );
  NAND _53_ (
    .A(_09_),
    .B(_08_),
    .Y(_10_)
  );
  NOR _54_ (
    .A(_10_),
    .B(_07_),
    .Y(_11_)
  );
  NAND _55_ (
    .A(_11_),
    .B(_20_),
    .Y(_12_)
  );
  NOT _56_ (
    .A(_12_),
    .Y(_21_)
  );
  NOR _57_ (
    .A(_30_),
    .B(_03_),
    .Y(_13_)
  );
  NOT _58_ (
    .A(_04_),
    .Y(_14_)
  );
  NOT _59_ (
    .A(_05_),
    .Y(_15_)
  );
  NAND _60_ (
    .A(_15_),
    .B(_14_),
    .Y(_16_)
  );
  NOR _61_ (
    .A(_16_),
    .B(_06_),
    .Y(_17_)
  );
  NAND _62_ (
    .A(_17_),
    .B(_13_),
    .Y(_18_)
  );
  NAND _63_ (
    .A(_18_),
    .B(_20_),
    .Y(_19_)
  );
  NOR _64_ (
    .A(_19_),
    .B(_11_),
    .Y(_24_)
  );
  NAND _65_ (
    .A(_13_),
    .B(_20_),
    .Y(_22_)
  );
  NAND _66_ (
    .A(_15_),
    .B(_06_),
    .Y(_23_)
  );
  NOR _67_ (
    .A(_23_),
    .B(_22_),
    .Y(_25_)
  );
  NAND _68_ (
    .A(_25_),
    .B(_04_),
    .Y(_26_)
  );
  NAND _69_ (
    .A(_26_),
    .B(_12_),
    .Y(_27_)
  );
  NOT _70_ (
    .A(_20_),
    .Y(_28_)
  );
  NOR _71_ (
    .A(_18_),
    .B(_28_),
    .Y(_29_)
  );
  reg \header_temp_reg[0] ;
  (* src = "Error_response.v:33" *)
  always @(posedge clk)
      \header_temp_reg[0]  <= _00_[0];
  assign header_temp[0] = \header_temp_reg[0] ;
  reg \header_temp_reg[8] ;
  (* src = "Error_response.v:33" *)
  always @(posedge clk)
      \header_temp_reg[8]  <= _00_[8];
  assign header_temp[8] = \header_temp_reg[8] ;
  reg \header_temp_reg[9] ;
  (* src = "Error_response.v:33" *)
  always @(posedge clk)
      \header_temp_reg[9]  <= _00_[9];
  assign header_temp[9] = \header_temp_reg[9] ;
  reg \header_temp_reg[10] ;
  (* src = "Error_response.v:33" *)
  always @(posedge clk)
      \header_temp_reg[10]  <= _00_[10];
  assign header_temp[10] = \header_temp_reg[10] ;
  reg \header_temp_reg[24] ;
  (* src = "Error_response.v:33" *)
  always @(posedge clk)
      \header_temp_reg[24]  <= Enable;
  assign header_temp[24] = \header_temp_reg[24] ;
  assign MSG_ready = header_temp[24];
  assign MSG_ready_temp = header_temp[24];
  assign header = { 7'b0000000, header_temp[24], 1'b0, header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], 5'b00000, header_temp[10:8], 7'b0000000, header_temp[0] };
  assign { header_temp[31:25], header_temp[23:11], header_temp[7:1] } = { 8'b00000000, header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], header_temp[24], 12'b000000000000 };
  assign payload = 1'b0;
  assign _03_ = Error_Unsupported_Protocol;
  assign _30_ = Error_Invalid_Request;
  assign _31_ = Error_Unspecified;
  assign _04_ = Error_Busy;
  assign _05_ = Error_Invalid_Request_challenge;
  assign _20_ = Enable;
  assign _00_[0] = _21_;
  assign _00_[8] = _24_;
  assign _00_[9] = _27_;
  assign _00_[10] = _29_;
endmodule
